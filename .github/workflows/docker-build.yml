name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:  # 允许手动触发

env:
  REGISTRY: docker.io
  IMAGE_NAME: hav93/telegram-message-bot

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写权限来提交前端构建文件
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Commit frontend build files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add frontend/dist/ || true
        git diff --staged --quiet || git commit -m "🚀 Auto-build frontend [skip ci]" || true

    - name: Push frontend build files
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request' && secrets.DOCKER_USERNAME != ''
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' && secrets.DOCKER_USERNAME != '' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build result
      run: |
        echo "Build completed successfully!"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
